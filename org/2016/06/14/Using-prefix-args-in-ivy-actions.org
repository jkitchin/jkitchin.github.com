* Using prefix args in ivy actions
  :PROPERTIES:
  :categories: emacs,ivy
  :date:     2016/06/14 11:03:46
  :updated:  2016/06/14 11:03:46
  :END:

There is a [[https://github.com/abo-abo/swiper/commit/e54aa1850077d22e8007edef86d4bb751c3b7794][brand new feature]] in ivy which allows you to pass prefix args to the action functions. This change has made it into MELPA by now, so you can try it out. Check out this [[*Bare bones setup]] for an emacs -Q setup that I used for this post. This installs ivy and org-ref with some minimal setup.

The video for this post can be found here: https://www.youtube.com/watch?v=Y8HHLAE_-yA

In this post I will show how to use this new feature to create an ivy selection function that inserts a citation from a bibtex file, and with a prefix arg lets you choose the type of citation to insert.

[[https://melpa.org/#/org-ref][org-ref]] provides a function that generates candidates for selection. Each candidate is a list where the car of the list is a display string, and the cdr is an a-list of properties. I have a lot of entries in here, so it is important to have a convenient selection tool.

#+BEGIN_SRC emacs-lisp
(setq org-ref-bibtex-files '("references.bib"))
(length (orhc-bibtex-candidates))
#+END_SRC

#+RESULTS:
: 2

Here is an example of the first entry in my bibliography. We will need to extract the key from that.

#+BEGIN_SRC emacs-lisp
(elt (orhc-bibtex-candidates) 0)
#+END_SRC

#+RESULTS:
: (âŒ˜ |kitchin-2015-examp| Kitchin, John R., Examples of Effective Data Sharing in Scientific Publishing, ACS Catalysis (2015). :DESC0004031: :early-career: :orgmode: :Data sharing: (eprint .  https://doi.org/10.1021/acscatal.5b00538 ) (keywords . DESC0004031, early-career, orgmode, Data sharing ) (url .  https://doi.org/10.1021/acscatal.5b00538 ) (doi . 10.1021/acscatal.5b00538) (year . 2015) (pages . 3894-3899) (number . 6) (volume . 5) (journal . ACS Catalysis) (title . Examples of Effective Data Sharing in Scientific Publishing) (author . Kitchin, John R.) (=type= . article) (=key= . kitchin-2015-examp) (bibfile . /Users/jkitchin/Dropbox/projects/emacs/references.bib) (position . 463))



Here is the key from that entry.

#+BEGIN_SRC emacs-lisp
(cdr (assoc "=key=" (elt (orhc-bibtex-candidates) 0)))
#+END_SRC

#+RESULTS:
: kitchin-2015-examp


By default we will insert that as cite:kitchin-2015-examp but there are other types of citations we might use too like citenum:kitchin-2015-examp. org-ref provides a list of citation types we could insert. Here they are. This somewhat complicated code just wraps the string so it fits in the blog post nicely.

#+BEGIN_SRC emacs-lisp
(with-temp-buffer
  (insert (format "%s" org-ref-cite-types))
  (fill-region (point-min) (point-max))
  (buffer-string))
#+END_SRC

#+RESULTS:
: (cite nocite citet citet* citep citep* citealt citealt* citealp
: citealp* citenum citetext citeauthor citeauthor* citeyear citeyear*
: Citet Citep Citealt Citealp Citeauthor Cite parencite Parencite
: footcite footcitetext textcite Textcite smartcite Smartcite cite*
: parencite* supercite autocite Autocite autocite* Autocite* Citeauthor*
: citetitle citetitle* citedate citedate* citeurl fullcite footfullcite
: notecite Notecite pnotecite Pnotecite fnotecite cites Cites parencites
: Parencites footcites footcitetexts smartcites Smartcites textcites
: Textcites supercites autocites Autocites bibentry)

So, we are now prepared to make a simple ivy function to query our bibliography that has a default action to insert a standard citation, but we can use a prefix to change the citation type. The prefix arg is stored in the global variable ivy-current-prefix-arg which can be checked inside the action function. We can check for it in the action function and do something different if a prefix arg is used. Here is the function.

#+BEGIN_SRC emacs-lisp
(defun cite ()
  (interactive)
  (ivy-read "select: " (orhc-bibtex-candidates)
	    :action (lambda (entry)
		      (let ((key (cdr (assoc "=key=" entry)))
			    (type (if ivy-current-prefix-arg
				      (ivy-read "type: " org-ref-cite-types)
				    "cite")))
			(with-ivy-window
			  (insert (format "%s:%s" type key)))))))
#+END_SRC

#+RESULTS:
: cite

To get the default action, we run M-x cite, enter our query, select an entry and press return. To get an alternate cite type, we run M-x cite, enter the query, select an entry, then type  C-u return, which will prompt you for an alternate citation type, then insert your choice and the citation. Here are some examples.
cite:kitchin-2015-examp  citeauthor:kitchin-2015-examp citealt*:kitchin-2015-examp



In summary, these aren't functions you would want to use; they don't handle a lot of the nuances of multiple citations. They are just to illustrate in a pretty simple way how easy it is to use a prefix arg in an ivy action function now!

** Bare bones setup
This will setup the bare bones emacs that I used for this post.

#+begin_src emacs-lisp
(setq package-user-dir (expand-file-name "sandbox"))

(setq package-archives
      '(("melpa" . "http://melpa.org/packages/")))

(require 'package)

;;; Code:

(package-initialize)

(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

(eval-when-compile
  (require 'use-package))

(setq use-package-always-ensure t)

(use-package ivy)

(use-package org-ref
 :init
 (setq org-ref-default-bibliography '("~/Dropbox/bibliography/references.bib"))
 :config (require 'org-ref-helm-cite))

(global-visual-line-mode 1)
(setq org-confirm-babel-evaluate nil)
(load-theme 'leuven)
#+end_src

#+RESULTS:
: t
