* Clocking your time in org-mode
  CLOSED: [2014-01-27 Mon 13:46]
  :LOGBOOK:
  CLOCK: [2014-01-26 Sun 13:08]--[2014-01-26 Sun 13:16] =>  0:08
  CLOCK: [2014-01-26 Sun 13:04]--[2014-01-26 Sun 13:06] =>  0:02
  CLOCK: [2014-01-26 Sun 12:07]--[2014-01-26 Sun 12:10] =>  0:03
  :END:
  :PROPERTIES:
  :categories: org-mode
  :date:     2014/01/27 13:46:21
  :updated:  2014/01/27 13:53:03
  :END:
  

I have some need for tracking how much time I spend on certain jobs,
e.g. committees, etc... because 1) I have to report this
information, 2) I need a better idea of how much time some things
take.  Org-mode supports the idea of "clocking in to a task". You run
(org-clock-in) in a heading, and it stores a time stamp. You do your
work in that heading, and when done, you (org-clock-out).

You can summarize your time with (org-clock-report) which puts a dynamic block in your file like this.

#+BEGIN: clocktable :maxlevel 2 :scope subtree :link t
#+CAPTION: Clock summary at [2014-01-26 Sun 13:36]
| Headline                       | Time   |      |
|--------------------------------+--------+------|
| *Total time*                   | *0:24* |      |
|--------------------------------+--------+------|
| [[file:c:/Users/jkitchin/Dropbox/blogofile-jkitchin.github.com/_blog/blog.org::Clocking%20your%20time%20in%20org-mode][Clocking your time in org-mode]] | 0:24   |      |
| \__ [[file:c:/Users/jkitchin/Dropbox/blogofile-jkitchin.github.com/_blog/blog.org::work%20in%20subheadings][work in subheadings]]        |        | 0:06 |
| \__ [[file:c:/Users/jkitchin/Dropbox/blogofile-jkitchin.github.com/_blog/blog.org::Using%20clocking%20effectively][Using clocking effectively]] |        | 0:05 |
#+END:

You can update it by putting your cursor in the #+BEGIN line, and pressing C-c C-c.

** work in subheadings
   :LOGBOOK:
   CLOCK: [2014-01-26 Sun 13:02]--[2014-01-26 Sun 13:04] =>  0:02
   CLOCK: [2014-01-26 Sun 13:00]--[2014-01-26 Sun 13:02] =>  0:02
   CLOCK: [2014-01-26 Sun 12:11]--[2014-01-26 Sun 12:13] =>  0:02
   CLOCK: [2014-01-26 Sun 12:11]--[2014-01-26 Sun 12:11] =>  0:00
   :END:
It seems that the clock-in mechanism works on the heading you are
in. So whenever you clock in, it is specific to that heading. If you
clock-in more than once, multiple CLOCK entries are stored, unless you
modify org-clock-into-drawer. It seems like you probably want these CLOCK entries in a drawer, so you should put this in your init.el file:
#+BEGIN_SRC emacs-lisp
(setq org-clock-into-drawer t)
#+END_SRC

** Clock in to the right task
By default, (org-clock-in) creates clocks-in to the current headline. Org-mode seems to store a list of recently clocked tasks. You can access them by typing C-u C-c C-x C-i. You will be given some choices of which task to clock in to. You can switch to another task by doing this too.

** Using clocking effectively
   :LOGBOOK:
   CLOCK: [2014-01-26 Sun 13:31]--[2014-01-26 Sun 13:36] =>  0:05
   :END:
It will take some discipline and practice to use this effectively. It appears you can clock in any heading, and then use the clock report to aggregate all the times into one summary. That report can have a variety of scopes, from subtree to file. In that case, if you keep all relevant task information to a project in a file, you just clock in wherever you work in that file, and let the report keep track of it for you.

You could use this to track the amount of time you spend reviewing manuscripts, or doing work for a committee. You just need to remember to actually use it!

It might be interesting to setup code that would automatically clock in when you open a file, and then clock out when  you close it. Probably this would be done with hooks.

There is a nice [[http://sachachua.com/blog/wp-content/uploads/2014/01/2014-01-06-Tracking-time-with-Org-mode.png][map]] of using org-mode for clocking time [[http://sachachua.com/blog/wp-content/uploads/2014/01/2014-01-06-Tracking-time-with-Org-mode.png][here]].


