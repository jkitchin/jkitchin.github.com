* yasnippets for jasp, ase and python
  :PROPERTIES:
  :categories: jasp,ase,emacs
  :date:     2014/02/17 09:03:50
  :updated:  2014/02/17 09:03:50
  :END:

In using [[http://github.com/jkitchin/jasp for calculations, I find there are lots of small python phrases I use over and over. Today I will examine using [[http://capitaomorte.github.io/yasnippet/index.html][yasnippet]] to save time and keystrokes. yasnippet is a template expansion module, where you type a small set of characters, press =Tab=, and the
characters "expand" to the full text. It is pretty sophisticated, and allows you to define "tab-stops" which you interactively fill in, and tab between like filling in a form.

All the snippets are defined in the [[*Appendix][Appendix]].

** Tangle the snippets, and add them to yasnippet

Each snippet definition belongs in a file in a directory. The main directory is called "snippets". Since I anticipate using these snippets in org-mode, each snippet is defined in a directory within snippets called "org-mode". First, we make the directory here. I also want to use the snippets in python mode, so we also create a python-mode directory here. We do not have to duplicate the snippets. We can create a file called [[http://capitaomorte.github.io/yasnippet/snippet-organization.html][.yas-parents]], with one line in it containing "org-mode".

#+BEGIN_SRC sh
mkdir -p snippets/org-mode
mkdir -p snippets/python-mode
echo "org-mode" > snippets/python-mode/.yas-parents
#+END_SRC

#+RESULTS:

Each snippet is defined in a src block with  a =:tangle= header. So, we can extract them all in one command here.

#+BEGIN_SRC emacs-lisp
(org-babel-tangle)
#+END_SRC

#+RESULTS:
| snippets/org-mode/iase | snippets/org-mode/imp | snippets/org-mode/inp | snippets/org-mode/ij | snippets/org-mode/pl | snippets/org-mode/pyl | snippets/org-mode/pxl | snippets/org-mode/pp | snippets/org-mode/npa | snippets/org-mode/awt | snippets/org-mode/avw | snippets/org-mode/agf | snippets/org-mode/ape | snippets/org-mode/atms | snippets/org-mode/atm | snippets/org-mode/cga | snippets/org-mode/cc | snippets/org-mode/wjn | snippets/org-mode/wjl |

We also need to add our new directory to yasnippets. This is done by adding the directory to the =yas-snippet-dirs= variable. You could add this to your init.el file to permanently add these snippets.

#+BEGIN_SRC emacs-lisp
(add-to-list 'yas-snippet-dirs "c:/Users/jkitchin/Dropbox/blogofile-jkitchin.github.com/_blog/snippets")
#+END_SRC
#+RESULTS:
| c:/Users/jkitchin/Dropbox/blogofile-jkitchin.github.com/_blog/snippets | ~/.emacs.d/snippets | c:/users/jkitchin/Dropbox/kitchingroup/jmax/elpa/yasnippet-20140106.1009/snippets |

Finally, we reload all the snippet definitions, so our new definitions are ready to use.
#+BEGIN_SRC emacs-lisp
(yas-reload-all)
#+END_SRC

#+RESULTS:
: [yas] Reloaded everything (snippets will load just-in-time)... (some errors, check *Messages*).

Alternatively, you might just load this directory.
#+BEGIN_SRC emacs-lisp
(yas-load-directory "./snippets")
#+END_SRC

#+RESULTS:

** Using the snippets
Each of these snippets is for a python phrase, but I usually write my python blocks in org-mode. You would use these by typing the shortcut name, and then pressing tab. Below I show what each shortcut expands to.

wjl \to =with jasp('') as calc:=

wjn \to =with jasp('',) as calc:=
    =calc.calculate(atoms)=

cc  \to =calc.calculate(atoms)=

cga \to =atoms = calc.get_atoms()=

atm \to =Atom('', )=

atms \to =atoms = Atoms([], cell=)=

ape \to =atoms.get_potential_energy()=

agf \to =atoms.get_forces()=

avw \to =from ase.visualize import view=
=view(atoms)=

awt \to =from ase.io import write=
=write('.png', atoms, show_unit_cell=2)=

npa \to =np.array()=

pp \to =plt.plot(, )=

pxl \to =plt.xlabel()=

pyl \to =plt.ylabel()=

pl \to =plt.legend()=

ij \to =from jasp import *=

inp \to =import numpy as np=

imp \to =import matplotlib.pyplot as plt=

iase \to =from ase import Atom, Atoms=

What other snippets would be handy?

** Appendix
*** jasp snippets
#+BEGIN_SRC snippet :tangle snippets/org-mode/wjl
# -*- mode: snippet -*-
# --
with jasp('$1') as calc:
    $0
#+END_SRC

#+BEGIN_SRC snippet :tangle snippets/org-mode/wjn
# -*- mode: snippet -*-
# --
with jasp('$1',$0) as calc:
    calc.calculate(atoms)
#+END_SRC


#+BEGIN_SRC snippet :tangle snippets/org-mode/cc
# -*- mode: snippet -*-
# --
calc.calculate(atoms)
#+END_SRC

#+BEGIN_SRC snippet :tangle snippets/org-mode/cga
# -*- mode: snippet -*-
# --
atoms = calc.get_atoms()
#+END_SRC

*** ase snippets

Template for an ase.Atom

#+BEGIN_SRC snippet :tangle snippets/org-mode/atm
# -*- mode: snippet -*-
# --
Atom('$1', $2)
#+END_SRC

#+BEGIN_SRC snippet :tangle snippets/org-mode/atms
# -*- mode: snippet -*-
# --
atoms = Atoms([$1], cell=$2)
#+END_SRC


#+BEGIN_SRC snippet :tangle snippets/org-mode/ape
# -*- mode: snippet -*-
# --
atoms.get_potential_energy()
#+END_SRC


#+BEGIN_SRC snippet :tangle snippets/org-mode/agf
# -*- mode: snippet -*-
# --
atoms.get_forces()
#+END_SRC


#+BEGIN_SRC snippet :tangle snippets/org-mode/avw
# -*- mode: snippet -*-
# --
from ase.visualize import view
view(${1:atoms})
#+END_SRC


#+BEGIN_SRC snippet :tangle snippets/org-mode/awt
# -*- mode: snippet -*-
# --
from ase.io import write
write('$1.png', ${2:atoms}, show_unit_cell=${3:2})
#+END_SRC

*** python snippets
#+BEGIN_SRC snippet :tangle snippets/org-mode/inp
# -*- mode: snippet -*-
# --
import numpy as np
#+END_SRC

#+BEGIN_SRC snippet :tangle snippets/org-mode/imp
# -*- mode: snippet -*-
# --
import matplotlib.pyplot as plt
#+END_SRC

#+BEGIN_SRC snippet :tangle snippets/org-mode/iase
# -*- mode: snippet -*-
# --
from ase import Atom, Atoms
#+END_SRC


#+BEGIN_SRC snippet :tangle snippets/org-mode/npa
# -*- mode: snippet -*-
# --
np.array($0)
#+END_SRC

#+BEGIN_SRC snippet :tangle snippets/org-mode/pp
# -*- mode: snippet -*-
# --
plt.plot($1, $2)
#+END_SRC

#+BEGIN_SRC snippet :tangle snippets/org-mode/pxl
# -*- mode: snippet -*-
# --
plt.xlabel($1)
#+END_SRC

#+BEGIN_SRC snippet :tangle snippets/org-mode/pyl
# -*- mode: snippet -*-
# --
plt.ylabel($1)
#+END_SRC

#+BEGIN_SRC snippet :tangle snippets/org-mode/pl
# -*- mode: snippet -*-
# --
plt.legend($1)
#+END_SRC


#+BEGIN_SRC snippet :tangle snippets/org-mode/ij
# -*- mode: snippet -*-
# --
from jasp import *
#+END_SRC



