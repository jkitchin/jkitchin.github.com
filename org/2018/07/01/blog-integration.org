** blog integration                                                :noexport:
   :PROPERTIES:
   :date:     2018/07/01 19:23:39
   :updated:  2018/07/01 19:23:39
   :org-url:  http://kitchingroup.cheme.cmu.edu/org/2018/07/01/blog-integration.org
   :permalink: http://kitchingroup.cheme.cmu.edu/blog/2018/07/01/Blog-integration/index.html
   :END:

#+BEGIN_SRC emacs-lisp
(defun bf-process-links (backend)
  "Modify links to change paths and copy files to `media-dir'.
Argument BACKEND the export backend."
  (org-mode)
  (let* ((links (nreverse (org-element-map (org-element-parse-buffer) 'link #'identity))))
    (loop for link in links
	  do
	  (let* ((type (org-element-property :type link))
		 (path (org-element-property :path link))
		 (beg (org-element-property :begin link))
		 (end (org-element-property :end link))
		 (fname (car (last (split-string path "/")))))

	    (cond
	     ((string= type "file")
	      (copy-file path (concat bf-media-directory fname) t)
	      (setf (buffer-substring beg end)
		    (if (string-match "png\\|svg" (or (file-name-extension
						       (org-element-property :path link))
						      ""))
			(format
			 "@@html:<img src=\"%s%s\">@@ "
			 bf-media-url-base fname)
		      (format
		       "@@html:<a href=\"%s%s\">%s</a>@@ "
		       bf-media-url-base fname fname))))
	     ((string= type "iphoto")
	      (copy-file path (concat bf-media-directory fname) t)
	      (setf (buffer-substring beg end)
		    "killed it")))))))
#+END_SRC

#+RESULTS:
: bf-process-links
