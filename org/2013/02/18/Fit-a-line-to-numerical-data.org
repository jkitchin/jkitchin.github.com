** Fit a line to numerical data
   :PROPERTIES:
   :categories: data analysis
   :date:     2013/02/18 09:00:00
   :updated:  2013/02/27 14:38:23
   :END:
[[http://matlab.cheme.cmu.edu/2011/08/04/fit-a-line-to-numerical-data/][Matlab post]]

We want to fit a line to this data:

#+BEGIN_SRC python :session
x = [0, 0.5, 1, 1.5, 2.0, 3.0, 4.0, 6.0, 10]
y = [0, -0.157, -0.315, -0.472, -0.629, -0.942, -1.255, -1.884, -3.147]
#+END_SRC

#+RESULTS:

We use the polyfit(x, y, n) command where n is the polynomial order, n=1 for a line.

#+BEGIN_SRC python :session
import numpy as np

p = np.polyfit(x, y, 1)
print p
slope, intercept = p
print slope, intercept
#+END_SRC

#+RESULTS:
: 
: >>> >>> [-0.31452218  0.00062457]
: >>> -0.3145221843 0.00062457337884

To show the fit, we can use numpy.polyval to evaluate the fit at many points.

#+BEGIN_SRC python :session
import matplotlib.pyplot as plt

xfit = np.linspace(0, 10)
yfit = np.polyval(p, xfit)

plt.plot(x, y, 'bo', label='raw data')
plt.plot(xfit, yfit, 'r-', label='fit')
plt.xlabel('x')
plt.ylabel('y')
plt.legend()
plt.savefig('images/linefit-1.png')
#+END_SRC

#+RESULTS:
: 
: >>> >>> >>> >>> [<matplotlib.lines.Line2D object at 0x053C1790>]
: [<matplotlib.lines.Line2D object at 0x0313C610>]
: <matplotlib.text.Text object at 0x052A4950>
: <matplotlib.text.Text object at 0x052B9A10>
: <matplotlib.legend.Legend object at 0x053C1CD0>

[[./images/linefit-1.png]]
