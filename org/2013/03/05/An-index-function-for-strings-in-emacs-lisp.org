* An index function for strings in emacs-lisp
  :PROPERTIES:
  :categories: emacs-lisp
  :date:     2013/03/05 19:28:30
  :updated:  2013/03/05 19:28:31
  :END:

I could not find an index function for strings in emacs-lisp. The =position= function seems to work for numbers, but not strings. Here is a version that works on strings.
#+BEGIN_SRC emacs-lisp :results value verbatim
(defun index (item list)
  "return index of item in list or nil"
  (let ((counter 0)
        (found nil))
    (dolist (listelement list counter)
      (if (string= item listelement)
	(progn 
	  (setq found t)
	  (return counter)) ; exit the loop
	;; else increment counter
	(incf counter)))
    ;; if we found it return counter otherwise return nil
    (if found counter nil)))
#+END_SRC

#+RESULTS:
: index

Here are some example uses:

#+BEGIN_SRC emacs-lisp :results value
(index "test" '("a" "test" "y"))
#+END_SRC

#+RESULTS:
: 1

#+BEGIN_SRC emacs-lisp :results value
(index "z" '("a" "b" "z"))
#+END_SRC

#+RESULTS:
: 2

#+BEGIN_SRC emacs-lisp :results value verbatim
(index "testy" '("a" "test" "y"))
#+END_SRC

#+RESULTS:
: nil

This raises an error because we use string=.

#+BEGIN_SRC emacs-lisp :results value verbatim
(index 1 '("a" "test" "y" 1))
#+END_SRC
