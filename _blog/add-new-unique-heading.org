* Adding new headings with unique CUSTOM_ID
  :PROPERTIES:
  :categories: org-mode
  :END:

In a [[http://jkitchin.github.io/blog/2013/10/29/Add-subheadings-to-all-headings-in-an-org-file-at-some-level/][recent post]] I looked at adding subheadings to existing headings. One issue with the code in that post is that it would add duplicate headings if you ran it twice. I think you could solve that by checking all the headlines to see if a CUSTOM_ID already exists. 

Here is a function that does that

#+BEGIN_SRC emacs-lisp
(defun org-contains-custom-id-p (custom-id)
 "Return true if any headline in the buffer has customi-id in the  CUSTOM_ID as a property"
 (interactive)
 (let ((MATCH t)
       (SCOPE 'file)
       (SKIP nil))
   (catch 'found
     (org-map-entries
      (lambda ()
        (if (string= (org-entry-get (point) "CUSTOM_ID") custom-id)
            (throw 'found t)) )
      MATCH SCOPE SKIP)
nil)))
#+END_SRC

Another issue I found tricky was getting the new headline at the level you want. You can use =org-insert-heading= but it inserts at the same level as the point you are in. You can use =org-insert-subheading= which nests a headline at the point. 

Neither of these gets you what you want reliably all the time. If you are in a heading with no subheadings, then you want to insert a subheading, but if you are in a heading with subheadings, you want to add a new heading at the same level. What you really want to do is insert a heading at a specific level. This calls for a new function I think.

#+BEGIN_SRC emacs-lisp
(defun org-insert-heading-at-level (title level)
(interactive)
#+END_SRC
